

-- ETF uses 21 x 25 characters per page
-- It have two spaces: character space, and color space (for ETFG and ETFC)

-- Module Defination
local module = {}

-- Define a class
module.ETFDocument = {}
module.ETFDocument.__index = module.ETFDocument

-- Constructor
function module.ETFDocument:new()
    local instance = setmetatable({}, module.ETFDocument)  -- Create a new instance
    instance.title = "Untitled Document"
    instance.pages = { module.ETFDocument.createBlankPage() }
    return instance
end

function module.ETFDocument:getCharacter(page, row, column)

    -- Invalid
    if (page < 1 or page > #self.pages) then
        return nil, nil
    end

    -- Main
    local character = nil
    local characterRow = self.pages[page].text[row]
    if characterRow ~= nil and #characterRow >= column then
        character = string.sub(characterRow, column, column)
    end

    local blit = "f"
    local blitRow = self.pages[page].color[row]
    if blitRow ~= nil and #blitRow > column then
        blit =  string.sub(blitRow, column, column)
    end

    local color = bit.blshift(1, tonumber(blit, 16))

    return character, color
end

function module.ETFDocument.createBlankPage()
    return {
        text = {},
        color = {}
    }
end


return module;